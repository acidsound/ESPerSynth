; PlatformIO Project Configuration File for ESPerSynth
; TR-808 Drum Machine for ESP32C3
;
; 이 파일은 모든 빌드 변형을 한곳에서 관리할 수 있는 통합 설정입니다.
; 
; 사용법:
;   pio run -e audio          # Audio.h 버전 빌드
;   pio run -e pwm            # PWM 버전 빌드
;   pio run -e mozzi          # Mozzi 버전 빌드
;   pio run -e audio -t upload # Audio.h 버전 업로드
;   pio run                   # 모든 환경 빌드

; ========================================
; 공통 설정 (모든 환경에 적용)
; ========================================
[env]
platform = espressif32
board = esp32-c3-devkitm-1
framework = arduino

; 보드 설정
board_build.flash_mode = qio
board_build.f_flash = 80000000L
board_build.f_cpu = 160000000L

; 업로드/모니터 속도
upload_speed = 921600
monitor_speed = 115200

; 시리얼 모니터 필터
monitor_filters = 
    esp32_exception_decoder
    time

; 공통 빌드 플래그
build_flags = 
    -DCORE_DEBUG_LEVEL=3
    -DARDUINO_USB_CDC_ON_BOOT=1

; ========================================
; Audio.h 버전 (권장) - 가장 안정적
; ========================================
[env:audio]
lib_deps = 
    https://github.com/acidsound/ESPerSynth.git
    earlephilhower/ESP8266Audio@^1.9.7

build_flags = 
    ${env.build_flags}
    -DUSE_AUDIO_LIB
    -DSAMPLE_RATE=44100
    -DBUFFER_SIZE=512
    -O2
    -DBOARD_HAS_PSRAM

board_build.partitions = default.csv

; ========================================
; PWM 버전 - 최소 메모리
; ========================================
[env:pwm]
lib_deps = 
    https://github.com/acidsound/ESPerSynth.git

build_flags = 
    ${env.build_flags}
    -DUSE_PWM_OUTPUT
    -DSAMPLE_RATE=32000
    -DPWM_FREQUENCY=100000
    -DPWM_RESOLUTION=8
    -Os
    -ffunction-sections
    -fdata-sections

board_build.partitions = default.csv

; ========================================
; Mozzi 버전 - 고급 사운드 합성
; ========================================
[env:mozzi]
lib_deps = 
    https://github.com/acidsound/ESPerSynth.git
    sensorium/Mozzi@^2.0.0

build_flags = 
    ${env.build_flags}
    -DUSE_MOZZI
    -DMOZZI_AUDIO_RATE=32768
    -DMOZZI_CONTROL_RATE=256
    -DMOZZI_ESP32
    -DMOZZI_ANALOG_READ_RESOLUTION=12
    -DSAMPLE_RATE=32768
    -O3
    -ffast-math
    -DBOARD_HAS_PSRAM

board_build.partitions = huge_app.csv

; ========================================
; 성능 테스트 버전 - 최고 성능 최적화
; ========================================
[env:performance]
lib_deps = 
    https://github.com/acidsound/ESPerSynth.git
    earlephilhower/ESP8266Audio@^1.9.7

build_flags = 
    ${env.build_flags}
    -DUSE_AUDIO_LIB
    -DCORE_DEBUG_LEVEL=1
    -O3
    -ffast-math
    -funroll-loops
    -DENABLE_PERFORMANCE_MONITORING
    -DBOARD_HAS_PSRAM

board_build.partitions = default.csv

; ========================================
; 디버그 버전 - 상세한 로깅
; ========================================
[env:debug]
lib_deps = 
    https://github.com/acidsound/ESPerSynth.git
    earlephilhower/ESP8266Audio@^1.9.7

build_flags = 
    ${env.build_flags}
    -DUSE_AUDIO_LIB
    -DCORE_DEBUG_LEVEL=5
    -Og
    -g
    -DDEBUG_ESP_PORT=Serial
    -DDEBUG_ESP_CORE

board_build.partitions = default.csv
build_type = debug

; ========================================
; 릴리즈 버전 - 최종 배포용
; ========================================
[env:release]
lib_deps = 
    https://github.com/acidsound/ESPerSynth.git
    earlephilhower/ESP8266Audio@^1.9.7

build_flags = 
    ${env.build_flags}
    -DUSE_AUDIO_LIB
    -DCORE_DEBUG_LEVEL=0
    -O2
    -DNDEBUG
    -DBOARD_HAS_PSRAM

board_build.partitions = default.csv
